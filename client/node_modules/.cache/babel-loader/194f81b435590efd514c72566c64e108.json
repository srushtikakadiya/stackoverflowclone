{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\StackOverflowCloneREPO-master\\\\client\\\\src\\\\components\\\\body\\\\createquestion\\\\Createquestion.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { showSuccessMsg, showErrMsg } from '../../utils/notification/Notification';\nimport { fetchUser, dispatchGetUser } from '../../../redux/actions/authAction';\nimport \"./Createquestion.css\"; // import Dropzone from 'react-dropzone';\n\nfunction Createquestion(props) {\n  const [title, settitle] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [photos, setphotos] = useState([]);\n  const [photosinput, setphotosinput] = useState('');\n  const [tags, settags] = useState([]);\n  const [taginput, settaginput] = useState('');\n  const auth = useSelector(state => state.auth);\n  const token = useSelector(state => state.token);\n\n  const dropTag = i => {\n    let pushArray = [];\n\n    for (let y = 0; y < tags.length; y++) {\n      if (y != i) pushArray.push(tags[y]);\n    }\n\n    settags(pushArray);\n  };\n\n  const dropPhoto = i => {\n    let pushArray = [];\n\n    for (let y = 0; y < photos.length; y++) {\n      if (y != i) pushArray.push(photos[y]);\n    }\n\n    setphotos(pushArray);\n  };\n\n  const settag = () => {\n    if (tags.indexOf(taginput) == -1 && taginput.length) {\n      console.log(taginput);\n      settags([...tags, taginput]);\n      settaginput('');\n    }\n  };\n\n  const setphoto = () => {\n    if (photos.indexOf(photosinput) == -1 && photosinput.length) {\n      setphotos([...photos, photosinput]);\n      setphotosinput('');\n    }\n  };\n\n  const uploadPhoto = async e => {\n    e.preventDefault();\n\n    try {\n      const file = e.target.files[0];\n      if (!file) console.log({\n        err: \"No files were uploaded.\",\n        success: ''\n      });\n      if (file.size > 1024 * 1024) alert(\"Size too large.\");\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.mimetype !== 'image/jpg') alert(\"File format is incorrect.\");\n      let formData = new FormData();\n      formData.append('file', file);\n      const res = await axios.post('/api/question/uploadimage', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setphotos([...photos, \"/\" + res.data.url]);\n    } catch (err) {\n      console.log({\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const createQ = async () => {\n    if (title.length > 0 && description.length > 0) {\n      var _res$data;\n\n      const res = await axios.post('/api/question/create', {\n        tags,\n        title,\n        description,\n        photos\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log(res);\n\n      if (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.reload) {\n        props.history.push(\"/\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"TitleInput\",\n    placeholder: \"Title\",\n    value: title,\n    onChange: e => settitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"DescriptionInput\",\n    placeholder: \"Body\",\n    values: description,\n    onChange: e => setdescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputFormTagsMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, tags.map((tag, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputFormTag\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 35\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 78\n    }\n  }, tag), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dropTag(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 97\n    }\n  }, \"X\")))), tags.length < 6 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tagsInputControl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Set tag\",\n    onChange: e => settaginput(e.target.value),\n    value: taginput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => settag(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Set tag\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imagesMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, photos.map((src, index) => /*#__PURE__*/React.createElement(\"img\", {\n    key: index,\n    src: src,\n    onClick: () => dropPhoto(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }))), photos.length < 6 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Choose PNG/JPG/JPEG\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"file_up\",\n    onChange: uploadPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, photos.length < 6 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fileInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Link on photo\",\n    onChange: e => setphotosinput(e.target.value),\n    value: photosinput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setphoto(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Set photo\")) : null), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"create\",\n    onClick: () => createQ(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Create question\"));\n}\n\nexport default Createquestion;","map":{"version":3,"sources":["E:/PROJECTS/StackOverflowCloneREPO-master/client/src/components/body/createquestion/Createquestion.js"],"names":["React","useState","useEffect","axios","useSelector","useDispatch","Link","showSuccessMsg","showErrMsg","fetchUser","dispatchGetUser","Createquestion","props","title","settitle","description","setdescription","photos","setphotos","photosinput","setphotosinput","tags","settags","taginput","settaginput","auth","state","token","dropTag","i","pushArray","y","length","push","dropPhoto","settag","indexOf","console","log","setphoto","uploadPhoto","e","preventDefault","file","target","files","err","success","size","alert","type","mimetype","formData","FormData","append","res","post","headers","Authorization","data","url","response","msg","createQ","reload","history","value","map","tag","index","src"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { showSuccessMsg, showErrMsg } from '../../utils/notification/Notification'\nimport { fetchUser, dispatchGetUser } from '../../../redux/actions/authAction'\nimport \"./Createquestion.css\"\n// import Dropzone from 'react-dropzone';\n\nfunction Createquestion(props) {\n  const [title, settitle] = useState(\"\")\n  const [description, setdescription] = useState(\"\")\n  const [photos, setphotos] = useState([])\n  const [photosinput, setphotosinput] = useState('')\n\n  const [tags, settags] = useState([])\n  const [taginput, settaginput] = useState('')\n  const auth = useSelector(state => state.auth)\n  const token = useSelector(state => state.token)\n\n\n\n  const dropTag = i => {\n    let pushArray = []\n    for (let y = 0; y < tags.length; y++) {\n      if (y != i)\n        pushArray.push(tags[y])\n    }\n    settags(pushArray)\n  }\n\n  const dropPhoto = i => {\n    let pushArray = []\n    for (let y = 0; y < photos.length; y++) {\n      if (y != i)\n        pushArray.push(photos[y])\n    }\n    setphotos(pushArray)\n  }\n\n  const settag = () => {\n    if (tags.indexOf(taginput) == -1 && taginput.length) {\n      console.log(taginput)\n      settags([...tags, taginput])\n      settaginput('')\n    }\n  }\n\n\n  const setphoto = () => {\n    if (photos.indexOf(photosinput) == -1 && photosinput.length) {\n      setphotos([...photos, photosinput])\n      setphotosinput('')\n    }\n  }\n  const uploadPhoto = async (e) => {\n    e.preventDefault()\n    try {\n      const file = e.target.files[0]\n\n      if (!file) console.log({ err: \"No files were uploaded.\", success: '' })\n\n      if (file.size > 1024 * 1024)\n        alert(\"Size too large.\")\n\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.mimetype !== 'image/jpg')\n        alert(\"File format is incorrect.\")\n\n      let formData = new FormData()\n      formData.append('file', file)\n\n      const res = await axios.post('/api/question/uploadimage', formData, {\n        headers: { 'content-type': 'multipart/form-data', Authorization: token }\n      })\n\n      setphotos([...photos, \"/\" + res.data.url])\n\n    } catch (err) {\n      console.log({ err: err.response.data.msg, success: '' })\n    }\n  }\n  const createQ = async () => {\n    if (title.length > 0 && description.length > 0) {\n      const res = await axios.post('/api/question/create', { tags, title, description, photos }, {\n        headers: { Authorization: token }\n      })\n      console.log(res)\n      if (res?.data?.reload) {\n        props.history.push(\"/\");\n\n      }\n\n    }\n  }\n  return (\n    <div className=\"inputForm\">\n      <input className=\"TitleInput\" placeholder=\"Title\" value={title} onChange={e => settitle(e.target.value)}></input>\n      <textarea className=\"DescriptionInput\" placeholder=\"Body\" values={description} onChange={e => setdescription(e.target.value)}></textarea>\n\n      <div className=\"inputFormTagsMap\">\n        {tags.map((tag, index) => <div className=\"inputFormTag\" key={index}> <span>{tag}</span> <button onClick={() => dropTag(index)}>X</button></div>)}\n      </div>\n      {tags.length < 6 ? <div className=\"tagsInputControl\">\n        <input placeholder=\"Set tag\" onChange={e => settaginput(e.target.value)} value={taginput} />\n        <button onClick={() => settag()}>Set tag</button></div> : null}\n\n\n      <div className=\"imagesMap\">\n        {photos.map((src, index) => <img key={index} src={src} onClick={() => dropPhoto(index)} />)}\n      </div>\n      {photos.length < 6 ? <>\n        <label>Choose PNG/JPG/JPEG</label>\n        <input type=\"file\" name=\"file\" id=\"file_up\" onChange={uploadPhoto} /></> : null}\n      <div>\n        {photos.length < 6 ? <div className=\"fileInput\">\n          <input placeholder=\"Link on photo\" onChange={e => setphotosinput(e.target.value)} value={photosinput} />\n          <button onClick={() => setphoto()}>Set photo</button></div> : null}\n      </div>\n      <button className=\"create\" onClick={() => createQ()}>Create question</button>\n\n    </div>\n  )\n}\nexport default Createquestion\n"]},"metadata":{},"sourceType":"module"}