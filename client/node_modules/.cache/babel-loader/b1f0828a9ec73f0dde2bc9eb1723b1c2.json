{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\StackOverflowCloneREPO-master\\\\client\\\\src\\\\components\\\\body\\\\settings\\\\Settings.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchUser, dispatchGetUser } from '../../../redux/actions/authAction';\nimport \"./Settings.css\";\n\nfunction Settings(props) {\n  const auth = useSelector(state => state.auth);\n  const token = useSelector(state => state.token);\n  const {\n    user,\n    isAdmin\n  } = auth;\n  const dispatch = useDispatch();\n  const [nickname, setnickname] = useState(user.name ? user.name : \"\");\n  const [fullname, setfullname] = useState(user.fullname ? user.fullname : \"\");\n  const [avatar, setavatar] = useState(user.avatar ? user.avatar : \"\");\n  const [email, setemail] = useState(user.email ? user.email : \"\");\n  const [tags, settags] = useState(user.tags ? user.tags : []);\n  const [password, setpassword] = useState(\"\");\n  const [submitpassword, setsubmitpassword] = useState(\"\");\n  const initialState = {\n    err: '',\n    success: ''\n  };\n  const [data, setData] = useState(initialState);\n\n  const changeAvatar = async e => {\n    e.preventDefault();\n\n    try {\n      const file = e.target.files[0];\n      if (!file) return setData({\n        err: \"No files were uploaded.\",\n        success: ''\n      });\n      if (file.size > 1024 * 1024) return setData({\n        err: \"Size too large.\",\n        success: ''\n      });\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') return setData({\n        err: \"File format is incorrect.\",\n        success: ''\n      });\n      let formData = new FormData();\n      formData.append('file', file);\n      const res = await axios.post('/api/users/uploadavatar', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      console.log(res);\n      setavatar(\"/\" + res.data.url);\n    } catch (err) {\n      setData({\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const updateMetaInfo = () => {\n    axios.post('/api/users/settings/info', {\n      nickname,\n      fullname,\n      avatar,\n      tags\n    }, {\n      headers: {\n        Authorization: token\n      }\n    }).then(d => {\n      alert(\"Done!\");\n      fetchUser(token).then(res => {\n        dispatch(dispatchGetUser(res));\n      });\n    });\n    console.log();\n  };\n\n  useEffect(() => {\n    setnickname(user.name);\n    setfullname(user.fullname);\n    setemail(user.email);\n    settags(user.tags);\n    setavatar(user.avatar);\n  }, [token, isAdmin, user]);\n\n  const rmrftag = i => {\n    let pushArray = [];\n\n    for (let y = 0; y < tags.length; y++) {\n      if (y != i) pushArray.push(tags[y]);\n    }\n\n    settags(pushArray);\n  };\n\n  const addTag = () => {\n    settags([...tags, taginput]);\n    settaginput(\"\");\n  };\n\n  const [avatarinput, setavatarinput] = useState(\"\");\n  const [taginput, settaginput] = useState(\"\");\n\n  const changePas = () => {\n    if (password == submitpassword && password.length > 6) {\n      axios.post('/api/users/settings/password', {\n        password: password\n      }, {\n        headers: {\n          Authorization: token\n        }\n      }).then(d => {\n        alert(\"Done\");\n      });\n    } else alert(\"Bad password\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar ? avatar : user.avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"file_input\",\n    name: \"file\",\n    onChange: changeAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar_input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: avatarinput,\n    onChange: e => setavatarinput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setavatar(avatarinput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"set avatar link\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"names_control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Nick\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: nickname || \"\",\n    onChange: e => setnickname(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Full name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: fullname || \"\",\n    onChange: e => setfullname(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settingsTagsMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, tags === null || tags === void 0 ? void 0 : tags.map((tag, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 30\n    }\n  }, tag, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rmrftag(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 49\n    }\n  }, \"X\")))), (tags === null || tags === void 0 ? void 0 : tags.length) < 6 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settingsTagsInputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: taginput,\n    placeholder: \"Set tag\",\n    onChange: e => {\n      settaginput(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addTag(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"add\")) : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submitChanges\",\n    onClick: () => updateMetaInfo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"changePassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Change Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => setpassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: submitpassword,\n    onChange: e => setsubmitpassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"\",\n    onClick: () => changePas(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, \"Change Password\")));\n}\n\nexport default Settings;","map":{"version":3,"sources":["E:/PROJECTS/StackOverflowCloneREPO-master/client/src/components/body/settings/Settings.js"],"names":["React","useState","useEffect","axios","useSelector","useDispatch","fetchUser","dispatchGetUser","Settings","props","auth","state","token","user","isAdmin","dispatch","nickname","setnickname","name","fullname","setfullname","avatar","setavatar","email","setemail","tags","settags","password","setpassword","submitpassword","setsubmitpassword","initialState","err","success","data","setData","changeAvatar","e","preventDefault","file","target","files","size","type","formData","FormData","append","res","post","headers","Authorization","console","log","url","response","msg","updateMetaInfo","then","d","alert","rmrftag","i","pushArray","y","length","push","addTag","taginput","settaginput","avatarinput","setavatarinput","changePas","value","map","tag"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchUser, dispatchGetUser } from '../../../redux/actions/authAction'\nimport \"./Settings.css\"\n\n\nfunction Settings(props) {\n  const auth = useSelector(state => state.auth)\n  const token = useSelector(state => state.token)\n  const { user, isAdmin } = auth\n  const dispatch = useDispatch()\n  const [nickname, setnickname] = useState(user.name ? user.name : \"\");\n  const [fullname, setfullname] = useState(user.fullname ? user.fullname : \"\");\n  const [avatar, setavatar] = useState(user.avatar ? user.avatar : \"\");\n  const [email, setemail] = useState(user.email ? user.email : \"\");\n  const [tags, settags] = useState(user.tags ? user.tags : []);\n  const [password, setpassword] = useState(\"\");\n  const [submitpassword, setsubmitpassword] = useState(\"\");\n  const initialState = {\n    err: '',\n    success: ''\n  }\n  const [data, setData] = useState(initialState)\n\n\n  const changeAvatar = async (e) => {\n    e.preventDefault()\n    try {\n      const file = e.target.files[0]\n\n      if (!file) return setData({ err: \"No files were uploaded.\", success: '' })\n\n      if (file.size > 1024 * 1024)\n        return setData({ err: \"Size too large.\", success: '' })\n\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png')\n        return setData({ err: \"File format is incorrect.\", success: '' })\n\n      let formData = new FormData()\n      formData.append('file', file)\n\n      const res = await axios.post('/api/users/uploadavatar', formData, {\n        headers: { 'content-type': 'multipart/form-data', Authorization: token }\n      })\n      console.log(res)\n      setavatar(\"/\" + res.data.url)\n\n    } catch (err) {\n      setData({ err: err.response.data.msg, success: '' })\n    }\n  }\n  const updateMetaInfo = () => {\n    axios.post('/api/users/settings/info', { nickname, fullname, avatar, tags }, {\n      headers: { Authorization: token }\n    }).then(d => {\n      alert(\"Done!\")\n      fetchUser(token).then(res => {\n        dispatch(dispatchGetUser(res))\n      })\n    })\n    console.log()\n  }\n\n  useEffect(() => {\n    setnickname(user.name)\n    setfullname(user.fullname)\n    setemail(user.email)\n    settags(user.tags)\n    setavatar(user.avatar)\n\n  }, [token, isAdmin, user])\n  const rmrftag = (i) => {\n\n    let pushArray = []\n    for (let y = 0; y < tags.length; y++) {\n      if (y != i)\n        pushArray.push(tags[y])\n    }\n    settags(pushArray)\n  }\n  const addTag = () => {\n    settags([...tags, taginput])\n    settaginput(\"\")\n  }\n  const [avatarinput, setavatarinput] = useState(\"\")\n  const [taginput, settaginput] = useState(\"\")\n  const changePas = () => {\n    if (password == submitpassword && password.length > 6) {\n      axios.post('/api/users/settings/password', { password: password }, {\n        headers: { Authorization: token }\n      }).then(d => { alert(\"Done\") })\n    }\n    else \n    alert(\"Bad password\")\n  }\n  return (<div className=\"settings\">\n    <div className=\"avatar\">\n      <img src={avatar ? avatar : user.avatar} alt=\"\" />\n      <input type=\"file\" className=\"file_input\" name=\"file\" onChange={changeAvatar} />\n      <div className=\"avatar_input\">\n        <input value={avatarinput} onChange={e => setavatarinput(e.target.value)} />\n        <button onClick={() => setavatar(avatarinput)}>set avatar link</button>\n      </div>\n    </div>\n    <div className=\"names_control\">\n      <label>Nick</label>\n      <input value={nickname || \"\"} onChange={e => setnickname(e.target.value)} />\n      <label>Full name</label>\n      <input value={fullname || \"\"} onChange={e => setfullname(e.target.value)} />\n    </div>\n    <div className=\"settingsTagsMap\">\n      {tags?.map((tag, i) => <div key={i}>{tag} <button onClick={() => rmrftag(i)}>X</button></div>)}\n    </div>\n    {tags?.length < 6 ? \n      <div className=\"settingsTagsInputs\">\n        <input value={taginput} placeholder=\"Set tag\" onChange={e => { settaginput(e.target.value) }} />\n        <button onClick={() => addTag()}>add</button>\n      </div> : null\n    }\n    <button className=\"submitChanges\" onClick={() => updateMetaInfo()}>Submit</button>\n\n    <div className=\"changePassword\">\n      <label>Change Password</label>\n      <input type=\"password\" value={password} onChange={e => setpassword(e.target.value)} />\n      <input type=\"password\" value={submitpassword} onChange={e => setsubmitpassword(e.target.value)} />\n      <button className=\"\" onClick={() => changePas()}>Change Password</button>\n    </div>\n\n\n  </div>)\n}\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}