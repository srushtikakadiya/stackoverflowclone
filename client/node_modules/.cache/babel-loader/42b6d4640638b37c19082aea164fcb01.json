{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\StackOverflowCloneREPO-master\\\\client\\\\src\\\\components\\\\body\\\\auth\\\\ResetPassword.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification';\nimport { isLength, isMatch } from '../../utils/validation/Validation';\nconst initialState = {\n  password: '',\n  cf_password: '',\n  err: '',\n  success: ''\n};\n\nfunction ResetPassword(props) {\n  const [data, setData] = useState(initialState);\n  const {\n    token\n  } = useParams();\n  const {\n    password,\n    cf_password,\n    err,\n    success\n  } = data;\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value,\n      err: '',\n      success: ''\n    });\n  };\n\n  const handleResetPass = async () => {\n    if (isLength(password)) return setData({ ...data,\n      err: \"Password must be at least 6 characters.\",\n      success: ''\n    });\n    if (!isMatch(password, cf_password)) return setData({ ...data,\n      err: \"Password did not match.\",\n      success: ''\n    });\n    const res = await axios.post('/api/auth/reset', {\n      password\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n\n    if (res.data.success) {\n      alert(res.data.msg);\n      return props.history.push(\"/login\");\n    }\n\n    alert(\"Something went wrong\");\n    props.history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fg_pass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Reset Your Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, err && showErrMsg(err), success && showSuccessMsg(success), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cf_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"cf_password\",\n    id: \"cf_password\",\n    value: cf_password,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleResetPass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Reset Password\")));\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["E:/PROJECTS/StackOverflowCloneREPO-master/client/src/components/body/auth/ResetPassword.js"],"names":["React","useState","axios","useParams","showErrMsg","showSuccessMsg","isLength","isMatch","initialState","password","cf_password","err","success","ResetPassword","props","data","setData","token","handleChangeInput","e","name","value","target","handleResetPass","res","post","headers","Authorization","alert","msg","history","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useParams } from 'react-router-dom'\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification'\nimport { isLength, isMatch } from '../../utils/validation/Validation'\n\n\nconst initialState = {\n    password: '',\n    cf_password: '',\n    err: '',\n    success: ''\n}\n\nfunction ResetPassword(props) {\n    const [data, setData] = useState(initialState)\n    const { token } = useParams()\n\n    const { password, cf_password, err, success } = data\n\n    const handleChangeInput = e => {\n        const { name, value } = e.target\n        setData({ ...data, [name]: value, err: '', success: '' })\n    }\n\n\n    const handleResetPass = async () => {\n        if (isLength(password))\n            return setData({ ...data, err: \"Password must be at least 6 characters.\", success: '' })\n\n        if (!isMatch(password, cf_password))\n            return setData({ ...data, err: \"Password did not match.\", success: '' })\n\n            const res = await axios.post('/api/auth/reset', { password }, {\n                headers: { Authorization: token }\n            })\n            if(res.data.success){\n                alert (res.data.msg)\n                return props.history.push(\"/login\")\n            }\n            alert(\"Something went wrong\")\n            props.history.push(\"/login\")\n            \n        }\n\n\n    return (\n        <div className=\"fg_pass\">\n            <h2>Reset Your Password</h2>\n\n            <div className=\"row\">\n                {err && showErrMsg(err)}\n                {success && showSuccessMsg(success)}\n\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" value={password}\n                    onChange={handleChangeInput} />\n\n                <label htmlFor=\"cf_password\">Confirm Password</label>\n                <input type=\"password\" name=\"cf_password\" id=\"cf_password\" value={cf_password}\n                    onChange={handleChangeInput} />\n\n                <button onClick={handleResetPass}>Reset Password</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ResetPassword\n"]},"metadata":{},"sourceType":"module"}