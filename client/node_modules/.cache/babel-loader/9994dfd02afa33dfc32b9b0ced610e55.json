{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\StackOverflowCloneREPO-master\\\\client\\\\src\\\\components\\\\body\\\\auth\\\\Register.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification';\nimport { isEmpty, isEmail, isLength, isMatch } from '../../utils/validation/Validation';\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n  cf_password: '',\n  fullname: '',\n  err: '',\n  success: ''\n};\n\nfunction Register(props) {\n  const [user, setUser] = useState(initialState);\n  const {\n    name,\n    email,\n    fullname,\n    password,\n    cf_password,\n    err,\n    success\n  } = user;\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value,\n      err: '',\n      success: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isEmpty(fullname) || isEmpty(name) || isEmpty(password)) return setUser({ ...user,\n      err: \"Please fill in all fields.\",\n      success: ''\n    });\n    if (!isEmail(email)) return setUser({ ...user,\n      err: \"Invalid emails.\",\n      success: ''\n    });\n    if (isLength(password)) return setUser({ ...user,\n      err: \"Password must be at least 6 characters.\",\n      success: ''\n    });\n    if (!isMatch(password, cf_password)) return setUser({ ...user,\n      err: \"Password did not match.\",\n      success: ''\n    });\n\n    try {\n      const res = await axios.post('/api/auth/register', {\n        name,\n        email,\n        password,\n        fullname\n      });\n      alert(\"Submit email!\");\n      props.history.push(\"/login\");\n    } catch (err) {\n      err.response.data.msg && setUser({ ...user,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your name\",\n    id: \"name\",\n    value: name,\n    name: \"name\",\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Enter email address\",\n    id: \"email\",\n    value: email,\n    name: \"email\",\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your full name\",\n    id: \"fullname\",\n    value: fullname,\n    name: \"fullname\",\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    id: \"password\",\n    value: password,\n    name: \"password\",\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cf_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    id: \"cf_password\",\n    value: cf_password,\n    name: \"cf_password\",\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"LoginBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Register\"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Already an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 36\n    }\n  }, \"Login\")));\n}\n\nexport default Register;","map":{"version":3,"sources":["E:/PROJECTS/StackOverflowCloneREPO-master/client/src/components/body/auth/Register.js"],"names":["React","useState","Link","axios","showErrMsg","showSuccessMsg","isEmpty","isEmail","isLength","isMatch","initialState","name","email","password","cf_password","fullname","err","success","Register","props","user","setUser","handleChangeInput","e","value","target","handleSubmit","preventDefault","res","post","alert","history","push","response","data","msg"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification'\nimport { isEmpty, isEmail, isLength, isMatch } from '../../utils/validation/Validation'\n\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n    cf_password: '',\n    fullname: '',\n    err: '',\n    success: ''\n}\n\nfunction Register(props) {\n    const [user, setUser] = useState(initialState)\n\n    const { name, email, fullname, password, cf_password, err, success } = user\n\n    const handleChangeInput = e => {\n        const { name, value } = e.target\n        setUser({ ...user, [name]: value, err: '', success: '' })\n    }\n\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        if (isEmpty(fullname) || isEmpty(name) || isEmpty(password))\n            return setUser({ ...user, err: \"Please fill in all fields.\", success: '' })\n\n        if (!isEmail(email))\n            return setUser({ ...user, err: \"Invalid emails.\", success: '' })\n\n        if (isLength(password))\n            return setUser({ ...user, err: \"Password must be at least 6 characters.\", success: '' })\n\n        if (!isMatch(password, cf_password))\n            return setUser({ ...user, err: \"Password did not match.\", success: '' })\n\n        try {\n            const res = await axios.post('/api/auth/register', {\n                name, email, password, fullname\n            })\n            alert(\"Submit email!\")\n            props.history.push(\"/login\")\n            \n        } catch (err) {\n            err.response.data.msg &&\n                setUser({ ...user, err: err.response.data.msg, success: '' })\n        }\n    }\n\n    return (\n        <div className=\"login_page\">\n            <h2>Register</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" placeholder=\"Enter your name\" id=\"name\"\n                        value={name} name=\"name\" onChange={handleChangeInput} />\n                </div>\n\n                <div>\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input type=\"email\" placeholder=\"Enter email address\" id=\"email\"\n                        value={email} name=\"email\" onChange={handleChangeInput} />\n                </div>\n\n                <div>\n                    <label htmlFor=\"email\">Full Name</label>\n                    <input type=\"text\" placeholder=\"Enter your full name\" id=\"fullname\"\n                        value={fullname} name=\"fullname\" onChange={handleChangeInput} />\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" placeholder=\"Enter password\" id=\"password\"\n                        value={password} name=\"password\" onChange={handleChangeInput} />\n                </div>\n\n                <div>\n                    <label htmlFor=\"cf_password\">Confirm Password</label>\n                    <input type=\"password\" placeholder=\"Confirm password\" id=\"cf_password\"\n                        value={cf_password} name=\"cf_password\" onChange={handleChangeInput} />\n                </div>\n\n                <div>\n                    <button type=\"submit\" className=\"LoginBtn\">Register</button>\n                </div>\n            </form>\n\n            <p>Already an account? <Link to=\"/login\">Login</Link></p>\n        </div>\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}