{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\StackOverflowCloneREPO-master\\\\client\\\\src\\\\components\\\\body\\\\notifications\\\\Notifications.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport \"./Notifications.css\";\nimport { dispatchGetNotifications, fetchAllNotifications } from '../../../redux/actions/notificationsAction';\n\nfunction Notifications(props) {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const token = useSelector(state => state.token);\n  const [Notifications, setNotifications] = useState([]);\n  const [reload, setreload] = useState(false);\n  useEffect(() => {\n    axios.post('/api/notifications/get', {}, {\n      headers: {\n        Authorization: token\n      }\n    }).then(data => {\n      setNotifications(data.data.notifications);\n    });\n\n    const getNotifications = () => {\n      return fetchAllNotifications(token).then(res => {\n        dispatch(dispatchGetNotifications(res));\n      });\n    };\n\n    getNotifications();\n  }, [token, auth, reload]);\n\n  const dropNotification = id => {\n    axios.delete(`/api/notifications/${id}`, {\n      headers: {\n        Authorization: token\n      }\n    }).then(data => {\n      if (data.data.reload) setreload(!reload);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notificationsMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, Notifications.length ? Notifications.map((n, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"notification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notificationHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notificationHeaderContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, n.description, /*#__PURE__*/React.createElement(Link, {\n    to: \"/question/\" + n.onWhatId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, n.onWhatId)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dropNotification(n._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"X\")))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"No notifications\"));\n}\n\nexport default Notifications;","map":{"version":3,"sources":["E:/PROJECTS/StackOverflowCloneREPO-master/client/src/components/body/notifications/Notifications.js"],"names":["React","useState","useEffect","axios","Link","useSelector","useDispatch","dispatchGetNotifications","fetchAllNotifications","Notifications","props","dispatch","auth","state","token","setNotifications","reload","setreload","post","headers","Authorization","then","data","notifications","getNotifications","res","dropNotification","id","delete","length","map","n","i","description","onWhatId","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport \"./Notifications.css\"\nimport { dispatchGetNotifications, fetchAllNotifications } from '../../../redux/actions/notificationsAction'\n\nfunction Notifications(props) {\n    const dispatch = useDispatch()\n    const auth = useSelector(state => state.auth)\n    const token = useSelector(state => state.token)\n    const [Notifications, setNotifications] = useState([])\n    const [reload, setreload] = useState(false)\n\n    useEffect(() => {\n        axios.post('/api/notifications/get', {}, {\n            headers: { Authorization: token }\n        }).then(data => {\n            setNotifications(data.data.notifications)\n        })\n        const getNotifications = () => {\n            return fetchAllNotifications(token).then(res => {\n                dispatch(dispatchGetNotifications(res))\n            })\n        }\n        getNotifications()\n    }, [token, auth, reload])\n\n    const dropNotification = (id) => {\n        axios.delete(`/api/notifications/${id}`, {\n            headers: { Authorization: token }\n        }).then(data => {\n            if (data.data.reload)\n                setreload(!reload)\n        })\n    }\n    \n    return (\n        <div className=\"notificationsMap\">\n            {   Notifications.length ?\n                Notifications.map((n, i) =>\n                    <div key={i} className=\"notification\">\n                        <div className=\"notificationHeader\">\n                            <div className=\"notificationHeaderContent\">\n                                {n.description}\n                                <Link to={\"/question/\" + n.onWhatId}>{n.onWhatId}</Link>\n                            </div>\n                            <button onClick={() => dropNotification(n._id)}>X</button>\n                        </div>\n                    </div>\n                ) :\n                <div>No notifications</div>\n            }\n        </div>\n    )\n}\nexport default Notifications"]},"metadata":{},"sourceType":"module"}