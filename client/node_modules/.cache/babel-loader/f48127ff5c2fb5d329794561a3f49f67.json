{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\StackOverflowCloneREPO-master\\\\client\\\\src\\\\components\\\\body\\\\Body.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './auth/Login';\nimport Register from './auth/Register';\nimport ActivationEmail from './auth/ActivationEmail';\nimport NotFound from '../utils/NotFound/NotFound';\nimport Createquestion from '../body/createquestion/Createquestion';\nimport Notifications from '../body/notifications/Notifications';\nimport ForgotPass from '../body/auth/ForgotPassword';\nimport ResetPass from '../body/auth/ResetPassword';\nimport Admin from '../body/admin/Admin';\nimport Settings from '../body/settings/Settings';\nimport EditUser from '../body/profile/EditUser';\nimport Home from '../body/home/Home';\nimport User from '../body/user/User';\nimport Users from '../body/users/Users';\nimport Question from '../body/question/Question';\nimport EditQuestion from '../body/question/EditQuestion';\nimport EditAnswear from '../body/question/EditAnswear';\nimport { useSelector } from 'react-redux';\n\nfunction Body() {\n  const auth = useSelector(state => state.auth);\n  const {\n    isLogged,\n    isAdmin\n  } = auth;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: Home,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/questions\",\n    component: Home,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/question/:questionId\",\n    component: Question,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/answear/:answearId/edit\",\n    component: isLogged ? EditAnswear : Login,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/question/:questionId/edit\",\n    component: isLogged ? EditQuestion : Login,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/notifications\",\n    component: isLogged ? Notifications : Login,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/users\",\n    component: Users,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/user/:userId\",\n    component: User,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: isLogged ? NotFound : Login,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    component: isLogged ? NotFound : Register,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/forgot_password\",\n    component: isLogged ? NotFound : ForgotPass,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/user/reset/:token\",\n    component: isLogged ? NotFound : ResetPass,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/user/activate/:activation_token\",\n    component: ActivationEmail,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/settings\",\n    component: isLogged ? Settings : NotFound,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/create\",\n    component: isLogged ? Createquestion : NotFound,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/admin\",\n    component: isAdmin ? Admin : NotFound,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/edit_user/:id\",\n    component: isAdmin ? EditUser : NotFound,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Body;","map":{"version":3,"sources":["E:/PROJECTS/StackOverflowCloneREPO-master/client/src/components/body/Body.js"],"names":["React","Switch","Route","Login","Register","ActivationEmail","NotFound","Createquestion","Notifications","ForgotPass","ResetPass","Admin","Settings","EditUser","Home","User","Users","Question","EditQuestion","EditAnswear","useSelector","Body","auth","state","isLogged","isAdmin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Login from './auth/Login'\nimport Register from './auth/Register'\nimport ActivationEmail from './auth/ActivationEmail'\nimport NotFound from '../utils/NotFound/NotFound'\nimport Createquestion from '../body/createquestion/Createquestion'\nimport Notifications from '../body/notifications/Notifications'\n\n\nimport ForgotPass from '../body/auth/ForgotPassword'\nimport ResetPass from '../body/auth/ResetPassword'\n\nimport Admin from '../body/admin/Admin'\nimport Settings from '../body/settings/Settings'\n\nimport EditUser from '../body/profile/EditUser'\n\nimport Home from '../body/home/Home'\nimport User from '../body/user/User'\nimport Users from '../body/users/Users'\n\n\nimport Question from '../body/question/Question'\nimport EditQuestion from '../body/question/EditQuestion'\nimport EditAnswear from '../body/question/EditAnswear'\n\n\nimport {useSelector} from 'react-redux'\n\nfunction Body() {\n    const auth = useSelector(state => state.auth)\n    const {isLogged, isAdmin} = auth\n    return (\n        <section>\n            <Switch>\n                <Route path=\"/\" component={Home} exact />\n                <Route path=\"/questions\" component={Home} exact />\n                <Route path=\"/question/:questionId\" component={Question} exact />\n                <Route path=\"/answear/:answearId/edit\" component={isLogged ? EditAnswear : Login} exact />\n                <Route path=\"/question/:questionId/edit\" component={isLogged ? EditQuestion : Login} exact />\n                <Route path=\"/notifications\" component={isLogged ? Notifications : Login} exact />\n                <Route path=\"/users\" component={Users} exact />\n                <Route path=\"/user/:userId\" component={User} exact />\n                <Route path=\"/login\" component={isLogged ? NotFound : Login} exact />\n                <Route path=\"/register\" component={isLogged ? NotFound : Register} exact />\n                <Route path=\"/forgot_password\" component={isLogged ? NotFound : ForgotPass} exact />\n                <Route path=\"/user/reset/:token\" component={isLogged ? NotFound : ResetPass} exact />\n                <Route path=\"/user/activate/:activation_token\" component={ActivationEmail} exact />\n                <Route path=\"/settings\" component={isLogged ? Settings : NotFound} exact />\n                <Route path=\"/create\" component={isLogged ? Createquestion : NotFound} exact />\n                <Route path=\"/admin\" component={isAdmin ? Admin : NotFound} exact />\n                <Route path=\"/edit_user/:id\" component={isAdmin ? EditUser : NotFound} exact />\n            </Switch>\n        </section>\n    )\n}\n\nexport default Body\n"]},"metadata":{},"sourceType":"module"}