{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\StackOverflowCloneREPO-master\\\\client\\\\src\\\\App.js\";\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dispatchLogin, fetchUser, dispatchGetUser } from './redux/actions/authAction';\nimport { dispatchGetNotifications, fetchAllNotifications } from './redux/actions/notificationsAction';\nimport Header from './components/header/Header';\nimport Body from './components/body/Body';\nimport axios from 'axios';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.token);\n  const auth = useSelector(state => state.auth);\n  useEffect(() => {\n    const firstLogin = localStorage.getItem('firstLogin');\n\n    if (firstLogin) {\n      const getToken = async () => {\n        const res = await axios.post('/api/auth/refresh_token', null);\n        dispatch({\n          type: 'GET_TOKEN',\n          payload: res.data.access_token\n        });\n      };\n\n      getToken();\n    }\n  }, [auth.isLogged, dispatch]);\n  useEffect(() => {\n    if (token) {\n      const getUser = () => {\n        dispatch(dispatchLogin());\n        return fetchUser(token).then(res => {\n          dispatch(dispatchGetUser(res));\n        });\n      };\n\n      getUser();\n\n      const getNotifications = () => {\n        return fetchAllNotifications(token).then(res => {\n          dispatch(dispatchGetNotifications(res));\n        });\n      };\n\n      getNotifications();\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/PROJECTS/StackOverflowCloneREPO-master/client/src/App.js"],"names":["React","useEffect","BrowserRouter","Router","useDispatch","useSelector","dispatchLogin","fetchUser","dispatchGetUser","dispatchGetNotifications","fetchAllNotifications","Header","Body","axios","App","dispatch","token","state","auth","firstLogin","localStorage","getItem","getToken","res","post","type","payload","data","access_token","isLogged","getUser","then","getNotifications"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,eAAnC,QAA0D,4BAA1D;AACA,SAASC,wBAAT,EAAmCC,qBAAnC,QAAgE,qCAAhE;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,KAAK,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,IAAI,GAAGb,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAxB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;;AACA,QAAIF,UAAJ,EAAgB;AACd,YAAMG,QAAQ,GAAG,YAAY;AAC3B,cAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,yBAAX,EAAsC,IAAtC,CAAlB;AACAT,QAAAA,QAAQ,CAAC;AAAEU,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAAvC,SAAD,CAAR;AACD,OAHD;;AAIAN,MAAAA,QAAQ;AACT;AACF,GATQ,EASN,CAACJ,IAAI,CAACW,QAAN,EAAgBd,QAAhB,CATM,CAAT;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,KAAJ,EAAW;AACT,YAAMc,OAAO,GAAG,MAAM;AACpBf,QAAAA,QAAQ,CAACT,aAAa,EAAd,CAAR;AAEA,eAAOC,SAAS,CAACS,KAAD,CAAT,CAAiBe,IAAjB,CAAsBR,GAAG,IAAI;AAClCR,UAAAA,QAAQ,CAACP,eAAe,CAACe,GAAD,CAAhB,CAAR;AACD,SAFM,CAAP;AAGD,OAND;;AAOAO,MAAAA,OAAO;;AAEP,YAAME,gBAAgB,GAAG,MAAM;AAC7B,eAAOtB,qBAAqB,CAACM,KAAD,CAArB,CAA6Be,IAA7B,CAAkCR,GAAG,IAAI;AAC9CR,UAAAA,QAAQ,CAACN,wBAAwB,CAACc,GAAD,CAAzB,CAAR;AACD,SAFM,CAAP;AAGD,OAJD;;AAKAS,MAAAA,gBAAgB;AACjB;AACF,GAlBQ,EAkBN,CAAChB,KAAD,EAAQD,QAAR,CAlBM,CAAT;AAqBA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { dispatchLogin, fetchUser, dispatchGetUser } from './redux/actions/authAction'\nimport { dispatchGetNotifications, fetchAllNotifications } from './redux/actions/notificationsAction'\n\nimport Header from './components/header/Header'\nimport Body from './components/body/Body'\nimport axios from 'axios';\n\nfunction App() {\n  const dispatch = useDispatch()\n  const token = useSelector(state => state.token)\n  const auth = useSelector(state => state.auth)\n\n  useEffect(() => {\n    const firstLogin = localStorage.getItem('firstLogin')\n    if (firstLogin) {\n      const getToken = async () => {\n        const res = await axios.post('/api/auth/refresh_token', null)\n        dispatch({ type: 'GET_TOKEN', payload: res.data.access_token })\n      }\n      getToken()\n    }\n  }, [auth.isLogged, dispatch])\n\n  useEffect(() => {\n    if (token) {\n      const getUser = () => {\n        dispatch(dispatchLogin())\n\n        return fetchUser(token).then(res => {\n          dispatch(dispatchGetUser(res))\n        })\n      }\n      getUser()\n\n      const getNotifications = () => {\n        return fetchAllNotifications(token).then(res => {\n          dispatch(dispatchGetNotifications(res))\n        })\n      }\n      getNotifications()\n    }\n  }, [token, dispatch])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Body />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}