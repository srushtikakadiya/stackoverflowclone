{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\StackOverflowCloneREPO-master\\\\client\\\\src\\\\components\\\\body\\\\question\\\\EditQuestion.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport \"./Question.css\";\n\nfunction EditQuestion(props) {\n  const [questiontext, setquestiontext] = useState('');\n  const [questiontitle, setquestiontitle] = useState('');\n  const auth = useSelector(state => state.auth);\n  const token = useSelector(state => state.token);\n  const questionId = props.match.params.questionId;\n  const [photos, setphotos] = useState([]);\n  const [photosinput, setphotosinput] = useState('');\n  const [tags, settags] = useState([]);\n  const [taginput, settaginput] = useState('');\n\n  const dropPhoto = i => {\n    let pushArray = [];\n\n    for (let y = 0; y < photos.length; y++) {\n      if (y != i) pushArray.push(photos[y]);\n    }\n\n    setphotos(pushArray);\n  };\n\n  useEffect(() => {\n    axios.post(`/api/question/get/${questionId}`, {}, {\n      headers: {\n        Authorization: token\n      }\n    }).then(d => {\n      var _d$data;\n\n      console.log(d);\n      if (d.data.redirect) props.history.push(\"/\");else if (d === null || d === void 0 ? void 0 : (_d$data = d.data) === null || _d$data === void 0 ? void 0 : _d$data.question) {\n        var _d$data2;\n\n        setphotos(d === null || d === void 0 ? void 0 : d.data.question.images);\n        setquestiontext(d === null || d === void 0 ? void 0 : (_d$data2 = d.data) === null || _d$data2 === void 0 ? void 0 : _d$data2.question.description);\n        setquestiontitle(d === null || d === void 0 ? void 0 : d.data.question.title);\n        settags(d === null || d === void 0 ? void 0 : d.data.question.tags);\n      }\n    });\n  }, [token, questionId, auth]);\n\n  const submitQuestionChanges = async () => {\n    if (questiontext.length > 0) {\n      var _res$data;\n\n      const res = await axios.patch(`/api/question/${questionId}`, {\n        photos,\n        questiontext,\n        questiontitle,\n        tags\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      if (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.reload) props.history.push(\"/question/\" + questionId);\n      console.log(res);\n    }\n  };\n\n  const uploadPhoto = async e => {\n    e.preventDefault();\n\n    try {\n      const file = e.target.files[0];\n      if (!file) console.log({\n        err: \"No files were uploaded.\",\n        success: ''\n      });\n      if (file.size > 1024 * 1024) console.log({\n        err: \"Size too large.\",\n        success: ''\n      });\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.mimetype !== 'image/jpg') console.log({\n        err: \"File format is incorrect.\",\n        success: ''\n      });\n      let formData = new FormData();\n      formData.append('file', file);\n      const res = await axios.post('/api/question/uploadimage', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setphotos([...photos, \"/\" + res.data.url]);\n    } catch (err) {\n      console.log({\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const setphoto = () => {\n    if (photos.indexOf(photosinput) == -1 && photosinput.length) {\n      setphotos([...photos, photosinput]);\n      setphotosinput('');\n    }\n  };\n\n  const dropTag = i => {\n    let pushArray = [];\n\n    for (let y = 0; y < tags.length; y++) {\n      if (y != i) pushArray.push(tags[y]);\n    }\n\n    settags(pushArray);\n  };\n\n  const settag = () => {\n    if (tags.indexOf(taginput) == -1 && taginput.length) {\n      console.log(taginput);\n      settags([...tags, taginput]);\n      settaginput('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"TitleInput\",\n    placeholder: \"Title\",\n    value: questiontitle,\n    onChange: e => setquestiontitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"DescriptionInput\",\n    placeholder: \"Body\",\n    value: questiontext,\n    onChange: e => setquestiontext(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputFormTagsMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, tags.map((tag, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputFormTag\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 35\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 78\n    }\n  }, tag), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dropTag(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 97\n    }\n  }, \"X\")))), tags.length < 6 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tagsInputControl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Set tag\",\n    onChange: e => settaginput(e.target.value),\n    value: taginput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => settag(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Set tag\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imagesMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, photos.map((src, index) => /*#__PURE__*/React.createElement(\"img\", {\n    key: index,\n    src: src,\n    onClick: () => dropPhoto(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }))), photos.length < 6 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Choose PNG/JPG/JPEG\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"file_up\",\n    onChange: uploadPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, photos.length < 6 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fileInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Link on photo\",\n    onChange: e => setphotosinput(e.target.value),\n    value: photosinput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setphoto(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Set photo\")) : null), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"create\",\n    onClick: () => submitQuestionChanges(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, \"Update question\"));\n}\n\nexport default EditQuestion;","map":{"version":3,"sources":["E:/PROJECTS/StackOverflowCloneREPO-master/client/src/components/body/question/EditQuestion.js"],"names":["React","useState","useEffect","axios","useSelector","useDispatch","EditQuestion","props","questiontext","setquestiontext","questiontitle","setquestiontitle","auth","state","token","questionId","match","params","photos","setphotos","photosinput","setphotosinput","tags","settags","taginput","settaginput","dropPhoto","i","pushArray","y","length","push","post","headers","Authorization","then","d","console","log","data","redirect","history","question","images","description","title","submitQuestionChanges","res","patch","reload","uploadPhoto","e","preventDefault","file","target","files","err","success","size","type","mimetype","formData","FormData","append","url","response","msg","setphoto","indexOf","dropTag","settag","value","map","tag","index","src"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport \"./Question.css\"\n\nfunction EditQuestion(props) {\n  const [questiontext, setquestiontext] = useState('')\n  const [questiontitle, setquestiontitle] = useState('')\n\n\n  const auth = useSelector(state => state.auth)\n  const token = useSelector(state => state.token)\n  const questionId = props.match.params.questionId;\n  const [photos, setphotos] = useState([])\n  const [photosinput, setphotosinput] = useState('')\n  const [tags, settags] = useState([])\n  const [taginput, settaginput] = useState('')\n  const dropPhoto = i => {\n    let pushArray = []\n    for (let y = 0; y < photos.length; y++) {\n      if (y != i)\n        pushArray.push(photos[y])\n    }\n    setphotos(pushArray)\n  }\n\n  useEffect(() => {\n    axios.post(`/api/question/get/${questionId}`, {}, {\n      headers: { Authorization: token }\n    }).then(d => {\n      console.log(d)\n      if (d.data.redirect)\n        props.history.push(\"/\");\n      else if (d?.data?.question) {\n        setphotos(d?.data.question.images)\n        setquestiontext(d?.data?.question.description)\n        setquestiontitle(d?.data.question.title)\n        settags(d?.data.question.tags)\n      }\n    })\n\n  }, [token, questionId, auth])\n  const submitQuestionChanges = async () => {\n    if (questiontext.length > 0) {\n      const res = await axios.patch(`/api/question/${questionId}`, { photos, questiontext, questiontitle, tags }, {\n        headers: { Authorization: token }\n      })\n      if (res?.data?.reload)\n        props.history.push(\"/question/\" + questionId)\n      console.log(res)\n    }\n\n  }\n  const uploadPhoto = async (e) => {\n    e.preventDefault()\n    try {\n      const file = e.target.files[0]\n\n      if (!file) console.log({ err: \"No files were uploaded.\", success: '' })\n\n      if (file.size > 1024 * 1024)\n        console.log({ err: \"Size too large.\", success: '' })\n\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.mimetype !== 'image/jpg')\n        console.log({ err: \"File format is incorrect.\", success: '' })\n\n      let formData = new FormData()\n      formData.append('file', file)\n\n      const res = await axios.post('/api/question/uploadimage', formData, {\n        headers: { 'content-type': 'multipart/form-data', Authorization: token }\n      })\n\n      setphotos([...photos, \"/\" + res.data.url])\n\n    } catch (err) {\n      console.log({ err: err.response.data.msg, success: '' })\n    }\n  }\n  const setphoto = () => {\n    if (photos.indexOf(photosinput) == -1 && photosinput.length) {\n      setphotos([...photos, photosinput])\n      setphotosinput('')\n    }\n  }\n  const dropTag = i => {\n    let pushArray = []\n    for (let y = 0; y < tags.length; y++) {\n      if (y != i)\n        pushArray.push(tags[y])\n    }\n    settags(pushArray)\n  }\n  const settag = () => {\n    if (tags.indexOf(taginput) == -1 && taginput.length) {\n      console.log(taginput)\n      settags([...tags, taginput])\n      settaginput('')\n    }\n  }\n\n  return (\n\n    <div className=\"inputForm\">\n      <input className=\"TitleInput\" placeholder=\"Title\" value={questiontitle} onChange={e => setquestiontitle(e.target.value)}></input>\n      <textarea className=\"DescriptionInput\" placeholder=\"Body\" value={questiontext} onChange={e => setquestiontext(e.target.value)}></textarea>\n\n      <div className=\"inputFormTagsMap\">\n        {tags.map((tag, index) => <div className=\"inputFormTag\" key={index}> <span>{tag}</span> <button onClick={() => dropTag(index)}>X</button></div>)}\n      </div>\n      {tags.length < 6 ? <div className=\"tagsInputControl\">\n        <input placeholder=\"Set tag\" onChange={e => settaginput(e.target.value)} value={taginput} />\n        <button onClick={() => settag()}>Set tag</button></div> : null}\n\n\n      <div className=\"imagesMap\">\n        {photos.map((src, index) => <img key={index} src={src} onClick={() => dropPhoto(index)} />)}\n      </div>\n      {photos.length < 6 ? <>\n        <label>Choose PNG/JPG/JPEG</label>\n        <input type=\"file\" name=\"file\" id=\"file_up\" onChange={uploadPhoto} /></> : null}\n      <div>\n        {photos.length < 6 ? <div className=\"fileInput\">\n          <input placeholder=\"Link on photo\" onChange={e => setphotosinput(e.target.value)} value={photosinput} />\n          <button onClick={() => setphoto()}>Set photo</button></div> : null}\n      </div>\n      <button className=\"create\" onClick={() => submitQuestionChanges()}>Update question</button>\n\n    </div>\n\n  )\n}\n\nexport default EditQuestion"]},"metadata":{},"sourceType":"module"}